# Start from the official Go image to build the binary.
FROM golang:1.19 as builder

LABEL maintainer="lucdow7@gmail.com"
LABEL version="alpha-0.1.0"
LABEL description="GinAndTonic API for tessera"

# Set the working directory inside the container.
WORKDIR /app

# Copy go mod and sum files.
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed.
RUN go mod download

# Copy the source from the current directory to the working Directory inside the container.
COPY . .

# Build the Go app.
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .

# Start a new stage from scratch for a smaller, final image.
FROM alpine:3.19.1 

# Add CA certificates and install curl for health checks.
RUN apk --no-cache add ca-certificates curl && \
    adduser -D appuser

# Set the consistent working directory
WORKDIR /app

# Create directories and adjust permissions
RUN mkdir logs economy && \
    chown -R appuser:appuser .

# Copy the pre-built binary file from the previous stage.
COPY --from=builder /app/main .
COPY --from=builder /app/.env .
COPY --from=builder /app/templates templates

# Use a non-root user to run the application
USER appuser

# Expose port 8080 to the outside world.
EXPOSE 8080

# Health check
HEALTHCHECK CMD curl --fail http://localhost:8080/health || exit 1

# Command to run the executable.
CMD ["./main"]
